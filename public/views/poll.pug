extends layout.pug

block content
  style(type='text/css').
    .remove {
      color: red !important;
    }

    .card-info .info {
      padding: 20px;
    }

    h2.header {
      background: whitesmoke;
      padding: 20px;
      margin-bottom: -8px;
    }

    .card.horizontal {
      box-shadow: none;
      background: whitesmoke;
      padding: 10px;
    }

    .no-data {
      display: flex;
      height: 100%;
      justify-content: center;
      align-items: center;
      font-size: 22px;
      color: #777777;
    }

    .input-field.col.s12 select {
      display: block;
    }

  - var poll = JSON.parse(singlePoll)

  .row
    .col.s12
      .card
        .card-image
          .card-info
            ul.chart-data-to-draw
              each option in poll.options
                li(option=option.title, voters=option.voters.length)
            #donutchart(style='width: 100%; height: 350px;')
        .card-content
          .row
            form.col.s12(action='vote/' + poll._id, method='POST')
              .row
                .input-field.col.s12
                  select(name='userChoice')
                    option(value='', disabled='', selected='') Choose your option
                    each option in poll.options
                      option(value=option._id) #{option.title}
              button.btn.waves-effect.waves-light(type='submit', name='action') Submit
        if isDeleteButtonVisible
          .card-action
            a(class="remove" href='/delete/' + poll._id) Remove this poll

  script.
    var chartElements = document.querySelectorAll('.chart-data-to-draw li');
    chartData = [['Poll', 'Options']];
    var votersSum = 0;
    for (var elem of chartElements) {
      chartData.push([
        elem.getAttribute('option'),
        elem.getAttribute('voters')
      ]);
      votersSum += Number(elem.getAttribute('voters'));
    }

    if (votersSum !== 0) {
      google.charts.load("current", {packages:["corechart"]});
      google.charts.setOnLoadCallback(drawChart);
    } else {
      displayNoDataMessage();
    }

    function drawChart() {
      var data = google.visualization.arrayToDataTable(chartData);
      var options = {
        pieHole: 0.4,
        legend : {position: 'bottom'}
      };
      var chart = new google.visualization.PieChart(
        document.getElementById('donutchart')
      );
      chart.draw(data, options);
    }

    function displayNoDataMessage() {
      var node = document.createElement('div');
      var textnode = document.createTextNode('Not enough data to display chart');
      node.classList.add('no-data')
      node.appendChild(textnode);
      document.getElementById('donutchart').appendChild(node);
    }


